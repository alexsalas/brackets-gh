{
  "name": "gh",
  "description": "GitHub command line tools.",
  "version": "1.7.0",
  "homepage": "http://nodegh.io",
  "author": {
    "name": "Eduardo Lundgren",
    "email": "eduardolundgren@gmail.com",
    "url": "http://www.eduardo.io"
  },
  "contributors": [
    {
      "name": "Zeno Rocha",
      "email": "zno.rocha@gmail.com",
      "url": "http://zenorocha.com"
    }
  ],
  "license": "BSD",
  "repository": {
    "type": "git",
    "url": "git@github.com:node-gh/gh.git"
  },
  "bugs": {
    "url": "https://github.com/node-gh/gh/issues"
  },
  "keywords": [
    "git",
    "github",
    "external",
    "commands",
    "helpers"
  ],
  "bin": {
    "gh": "bin/gh.js"
  },
  "scripts": {
    "lint": "node_modules/.bin/jshint bin/ lib/ test/",
    "test": "node_modules/.bin/mocha --reporter list"
  },
  "dependencies": {
    "async": "0.2.7",
    "cli-color": "0.2.2",
    "copy-paste": "0.0.9",
    "cli-log": "0.0.8",
    "moment ": "2.0.0",
    "handlebars ": "1.0.11",
    "git-wrapper": "0.1.1",
    "github": "0.1.11",
    "wordwrap": "0.0.2",
    "nopt": "2.1.1",
    "open": "0.0.3",
    "prompt": "0.2.9",
    "truncate": "1.0.2",
    "update-notifier": "0.1.3",
    "userhome": "0.1.0",
    "which": "1.0.5"
  },
  "devDependencies": {
    "grunt": "0.4.1",
    "grunt-jsbeautifier": "0.2.2",
    "jshint": "2.1.2",
    "mocha": "1.12.0"
  },
  "engines": {
    "node": ">=0.8"
  },
  "preferGlobal": "true",
  "readme": "# Node GH [![Build Status](https://secure.travis-ci.org/node-gh/gh.png?branch=master)](https://travis-ci.org/node-gh/gh) [![NPM version](https://badge.fury.io/js/gh.png)](http://badge.fury.io/js/gh) [![Dependency Status](https://david-dm.org/node-gh/gh.png)](https://david-dm.org/node-gh/gh)\n\n![Class Octocat](http://nodegh.io/images/class-octocat.jpg)\n\n> All the power of GitHub in your terminal.\n\n## Table of contents\n\n* [Install](#install)\n* [Usage](#usage)\n* [Dependencies](#dependencies)\n* [Demonstration](#demonstration)\n* [Available commands](#available-commands)\n    * [Pull requests](#pull-requests)\n    * [Notifications](#notifications)\n    * [Issues](#issues)\n    * [Repo](#repo)\n    * [Gists](#gists)\n    * [User](#user)\n    * [Alias](#alias)\n* [Config](#config)\n* [Plugins](#plugins)\n* [Testing](#testing)\n* [Team](#team)\n* [Contributing](#contributing)\n* [History](#history)\n* [License](#license)\n\n## Install\n\n    [sudo] npm install -g gh\n\n## Usage\n\n    gh [command] [payload] [--flags]\n\n## Dependencies\n\nIn order to sucessfully run this project you must have [NodeJS](http://nodejs.org/download/) installed.\n\n## Demonstration\n\n[![Demo](http://nodegh.io/images/nodegh-demo.jpg)](http://ascii.io/a/3391/)\n\n## Available commands\n\n```\ngh help\n```\n\n* List all comands options.\n\n    ```\ngh help --all\n    ```\n\n* List specific command options.\n\n    ```\ngh help <command>\n    ```\n\n## Pull requests\n\n```\ngh pull-request\n```\n\n> **Alias:** `gh pr`\n\n### 1. List\n\nOption            | Usage        | Type\n---               | ---          | ---\n`-l`, `--list`    | **Required** | `Boolean`\n`-a`, `--all`     | *Optional*   | `Boolean`\n`-d`, `--detailed`| *Optional*   | `Boolean`\n`-b`, `--branch`  | *Optional*   | `String`\n`--remote`        | *Optional*   | `String`\n`-r`, `--repo`    | *Optional*   | `String`\n`-S`, `--state`   | *Optional*   | [`open`, `closed`]\n`-u`, `--user`    | *Optional*   | `String`\n\n#### Examples\n\n* **Shortcut** for listing open pulls requests for the current branch.\n\n    ```\ngh pr\n    ```\n\n* List open pulls requests for all branches.\n\n    ```\ngh pr --list --all\n    ```\n\n* List open pulls requests with link and content.\n\n    ```\ngh pr --list --detailed\n    ```\n\n* List open pulls requests for a branch.\n\n    ```\ngh pr --list --branch master\n    ```\n\n### 2. Fetch\n\nOption           | Usage        | Type\n---              | ---          | ---\n`-f`, `--fetch`  | **Required** | `Boolean`\n`-n`, `--number` | **Required** | `Number`\n`-M`, `--merge`  | *Optional*   | `Boolean`\n`-R`, `--rebase` | *Optional*   | `Boolean`\n`--remote`       | *Optional*   | `String`\n`-r`, `--repo`   | *Optional*   | `String`\n`-u`, `--user`   | *Optional*   | `String`\n\n#### Examples\n\n* **Shortcut** for fetching pull request and checkout into a new branch `pull-1`.\n\n    ```\ngh pr 1\n    ```\n\n* Fech pull request rebasing or merging into the current branch.\n\n    ```\ngh pr 1 --fetch --rebase\n    ```\n    ```\ngh pr 1 --fetch --merge\n    ```\n\n### 3. Merge or rebase\n\nOption           | Usage        | Type\n---              | ---          | ---\n`-M`, `--merge`  | **Required** | `Boolean`\n`-R`, `--rebase` | **Required** | `Boolean`\n`-n`, `--number` | *Optional*   | `Number`\n`-b`, `--branch` | *Optional*   | `String`\n`--remote`       | *Optional*   | `String`\n`-r`, `--repo`   | *Optional*   | `String`\n`-u`, `--user`   | *Optional*   | `String`\n\nOmitting `--number` will try to guess the pull number from branch name e.g. `pr-1` results in `--number 1`. Omitting `--branch` will merge or rebase into `config.default_branch`.\n\n#### Examples\n\n* Merge or rebase pull request into a branch.\n\n    ```\ngh pr 1 --fetch --merge\n    ```\n\n    ```\ngh pr 1 --fetch --rebase\n    ```\n\n* Merge or rebase pull request into branch `dev`.\n\n    ```\ngh pr 1 --fetch --rebase --branch dev\n    ```\n\n    ```\ngh pr 1 --fetch --merge --branch dev\n    ```\n\n### 4. Comment\n\nOption           | Usage        | Type\n---              | ---          | ---\n`-c`, `--comment`| **Required** | `String`\n`-n`, `--number` | **Required** | `Number`\n`--remote`       | *Optional*   | `String`\n`-r`, `--repo`   | *Optional*   | `String`\n`-u`, `--user`   | *Optional*   | `String`\n\n#### Examples\n\n* Comment on a pull request.\n\n    ```\ngh pr 1 --comment \"Merged, thank you!\"\n    ```\n\n### 5. Forward\n\nOption           | Usage        | Type\n---              | ---          | ---\n`--fwd`          | **Required** | `String`\n`-n`, `--number` | **Required** | `Number`\n\n#### Examples\n\n* Forward a pull request to another reviewer.\n\n    ```\ngh pr 1 --fwd username\n    ```\n\n### 6. Open or close\n\nOption           | Usage        | Type\n---              | ---          | ---\n`-o`, `--open`   | **Required** | `Boolean`\n`-C`, `--close`  | **Required** | `Boolean`\n`-n`, `--number` | **Required** | `Number`\n`--remote`       | *Optional*   | `String`\n`-r`, `--repo`   | *Optional*   | `String`\n`-u`, `--user`   | *Optional*   | `String`\n\n#### Examples\n\n* Open a pull request.\n\n    ```\ngh pr 1 --open\n    ```\n* Close a pull request.\n\n    ```\ngh pr 1 --close\n    ```\n\n* Close multiple pull requests.\n\n    ```\ngh pr --close --number 1 --number 2\n    ```\n\n* Open multiple pull requests.\n\n    ```\ngh pr --open --number 1 --number 2\n    ```\n\n* Open or close a pull request that you've sent to someone.\n\n    ```\ngh pr 1 --close --user eduardolundgren\n    ```\n\n### 7. Submit\n\nOption                  | Usage        | Type\n---                     | ---          | ---\n`-s`, `--submit`        | **Required** | `String`\n`-b`, `--branch`        | *Optional*   | `String`\n`-D`, `--description`   | *Optional*   | `String`\n`-i`, `--issue`         | *Optional*   | `Number`\n`-r`, `--repo`          | *Optional*   | `String`\n`-t`, `--title`         | *Optional*   | `String`\n\nOmitting `--title` will submit a pull request using the last commit message as title.\n\n#### Examples\n\n* Submit a pull request using the current branch.\n\n    ```\ngh pr --submit eduardolundgren --title 'Fix #32' --description 'Awesome fix'\n    ```\n\n* Submit a pull request using the current branch to dev branch.\n\n    ```\ngh pr --submit eduardolundgren --branch dev\n    ```\n\n* Submit a pull request from a issue.\n\n    ```\ngh pr --submit eduardolundgren --issue 150\n    ```\n\n### 8. Open in Browser\n\nOption                 | Usage        | Type\n---                    | ---          | ---\n`-B`, `--browser`      | **Required** | `Boolean`\n`-n`, `--number`       | **Required** | `Number`\n`-u`, `--user`         | *Optional*   | `String`\n`-r`, `--repo`         | *Optional*   | `String`\n\n#### Examples\n\n* Open GitHub pull request page in the browser.\n\n    ```\ngh pr 100 --browser\n    ```\n\n## Notifications\n\n```\ngh notification\n```\n\n> **Alias:** `gh nt`\n\n\n### 1. Latest\n\nOption           | Usage        | Type\n---              | ---          | ---\n`-l`, `--latest` | **Required** | `Boolean`\n`--remote`       | *Optional*   | `String`\n`-r`, `--repo`   | *Optional*   | `String`\n`-u`, `--user`   | *Optional*   | `String`\n\n#### Examples\n\n* **Shortcut** for displaying the latest activities on the current repository.\n\n    ```\ngh nt\n    ```\n\n* Display the latest activities on a certain repository.\n\n    ```\ngh nt --latest --user eduardolundgren --repo node-gh\n    ```\n\n### 2. Watch\n\nOption           | Usage        | Type\n---              | ---          | ---\n`-w`, `--watch`  | **Required** | `Boolean`\n`--remote`       | *Optional*   | `String`\n`-r`, `--repo`   | *Optional*   | `String`\n`-u`, `--user`   | *Optional*   | `String`\n\n#### Examples\n\n* Watch for any activity on the current repository.\n\n    ```\ngh nt --watch\n    ```\n\n* Watch for any activity on a certain repository.\n\n    ```\ngh nt --watch --user eduardolundgren --repo node-gh\n    ```\n\n## Issues\n\n```\ngh issue\n```\n\n> **Alias:** `gh is`\n\n### 1. Create\n\nOption            | Usage        | Type\n---               | ---          | ---\n`-N`, `--new`     | **Required** | `Boolean`\n`-t`, `--title`   | **Required** | `String`\n`-A`, `--assignee`| *Optional*   | `String`\n`-L`, `--label`   | *Optional*   | `String`\n`-m`, `--message` | *Optional*   | `String`\n`--remote`        | *Optional*   | `String`\n`-r`, `--repo`    | *Optional*   | `String`\n`-u`, `--user`    | *Optional*   | `String`\n\n#### Examples\n\n* **Shortcut** for creating a new issue on the current repository.\n\n    ```\ngh is 'Node GH rocks!' 'Body with **Markdown** support'\n    ```\n\n* Create a new issue on a certain repository.\n\n    ```\ngh is --new --title 'Node GH rocks!' --message 'Body with **Markdown** support' --user eduardolundgren --repo node-gh\n    ```\n\n* Create a new issue with labels.\n\n    ```\ngh is --new --title 'Node GH rocks!' --label bug,question,test\n    ```\n\n* Create a new issue and assign it to someone.\n\n    ```\ngh is --new --title 'Node GH rocks!' --assignee zenorocha\n    ```\n\n### 2. Comment\n\nOption            | Usage        | Type\n---               | ---          | ---\n`-c`, `--comment` | **Required** | `String`\n`-n`, `--number`  | **Required** | `Number`\n`--remote`        | *Optional*   | `String`\n`-r`, `--repo`    | *Optional*   | `String`\n`-u`, `--user`    | *Optional*   | `String`\n\n#### Examples\n\n* Comment on an issue of the current repository.\n\n    ```\ngh is 1 --comment 'Node GH rocks!'\n    ```\n\n* Comment on an issue of a certain repository.\n\n    ```\ngh is 1 --comment 'Node GH rocks!' --user eduardolundgren --repo node-gh\n    ```\n\n### 3. Open or close\n\nOption           | Usage        | Type\n---              | ---          | ---\n`-o`, `--open`   | **Required** | `Boolean`\n`-C`, `--close`  | **Required** | `Boolean`\n`-n`, `--number` | **Required** | `Number`\n`--remote`       | *Optional*   | `String`\n`-r`, `--repo`   | *Optional*   | `String`\n`-u`, `--user`   | *Optional*   | `String`\n\n#### Examples\n\n* Open an issue.\n\n    ```\ngh is 1 --open\n    ```\n* Close an issue.\n\n    ```\ngh is 1 --close\n    ```\n\n* Close multiple issues.\n\n    ```\ngh is --close --number 1 --number 2\n    ```\n\n* Open multiple issues.\n\n    ```\ngh is --open --number 1 --number 2\n    ```\n\n* Open or close an issue that you've sent to someone.\n\n    ```\ngh is 1 --close --user eduardolundgren\n    ```\n\n### 4. List\n\nOption             | Usage        | Type\n---                | ---          | ---\n`-l`, `--list`     | **Required** | `Boolean`\n`-a`, `--all`      | *Optional*   | `Boolean`\n`-A`, `--assignee` | *Optional*   | `String`\n`-d`, `--detailed` | *Optional*   | `Boolean`\n`-L`, `--label`    | *Optional*   | `String`\n`-M`, `--milestone`| *Optional*   | `Number`\n`--remote`         | *Optional*   | `String`\n`-r`, `--repo`     | *Optional*   | `String`\n`-S`, `--state`    | *Optional*   | [`open`, `closed`]\n`-u`, `--user`     | *Optional*   | `String`\n\n#### Examples\n\n* **Shortcut** for listing all issues on the current repository.\n\n    ```\ngh is\n    ```\n\n* List all issues from all repositories.\n\n    ```\ngh is --list --all\n    ```\n\n* List issues assigned to someone.\n\n    ```\ngh is --list --assignee zenorocha\n    ```\n\n* List issues with link and content.\n\n    ```\ngh is --list --detailed\n    ```\n\n* List only closed issues on the current repository.\n\n    ```\ngh is --list --state closed\n    ```\n\n* List issues filtered by milestone.\n\n    ```\ngh is --list --milestone 1\n    ```\n\n* List issues that contains labels `todo` and `bug`.\n\n    ```\ngh is --list --label todo,bug\n    ```\n\n* List all issues on a certain repository.\n\n    ```\ngh is --list --user eduardolundgren --repo node-gh\n    ```\n\n### 5. Open in Browser\n\nOption                 | Usage        | Type\n---                    | ---          | ---\n`-B`, `--browser`      | **Required** | `Boolean`\n`-n`, `--number`       | **Required** | `Number`\n`-u`, `--user`         | *Optional*   | `String`\n`-r`, `--repo`         | *Optional*   | `String`\n\n#### Examples\n\n* Open GitHub issue page in the browser.\n\n    ```\ngh is 100 --browser\n    ```\n\n## Repo\n```\ngh repo\n```\n\n> **Alias:** `gh re`\n\n### 1. Open in Browser\n\nOption                 | Usage        | Type\n---                    | ---          | ---\n`-B`, `--browser`      | **Required** | `Boolean`\n`-u`, `--user`         | *Optional*   | `String`\n`-r`, `--repo`         | *Optional*   | `String`\n\n#### Examples\n\n* **Shortcut** for opening the GitHub repository page in the browser.\n\n    ```\ngh re\n    ```\n\n* Open GitHub repository page in the browser.\n\n    ```\ngh re --browser --user eduardolundgren --repo node-gh\n    ```\n\n### 2. List\n\nOption                 | Usage        | Type\n---                    | ---          | ---\n`-l`, `--list`         | **Required** | `Boolean`\n`-d`, `--detailed`     | *Optional*   | `Boolean`\n`-u`, `--user`         | *Optional*   | `String`\n`-t`, `--type`         | *Optional*   | [`all`, `owner`, `public`, `private`, `member`]\n\n#### Examples\n\n* List all repositories.\n\n    ```\ngh re --list\n    ```\n\n* List all private repositories.\n\n    ```\ngh re --list --type private\n    ```\n\n* List all repositories for someone.\n\n    ```\ngh re --list --user zenorocha\n    ```\n\n### 3. Create\n\nOption                | Usage        | Type\n---                   | ---          | ---\n`-N`, `--new`         | **Required** | `String`\n`-c`, `--clone`       | *Optional*   | `Boolean`\n`-t`, `--type`        | *Optional*   | [`private`]\n`--init`              | *Optional*   | `Boolean`\n`--gitignore`         | *Optional*   | `String`\n`--homepage`          | *Optional*   | `String`\n`--description`       | *Optional*   | `String`\n\n#### Examples\n\n* Create a new GitHub repository and clone on the current directory.\n\n    ```\ngh re --new foo --clone\n    ```\n\n* Create a new GitHub repository using .gitignore template for Ruby.\n\n    ```\ngh re --new gemified --gitignore Ruby\n    ```\n\n* Create a new private repository on GitHub, initializing it with a initial commit of the README.\n\n    ```\ngh re --new foo --init --type private\n    ```\n\n### 4. Fork\n\nOption                | Usage        | Type\n---                   | ---          | ---\n`-f`, `--fork`        | **Required** | `String`\n`-u`, `--user`        | **Required** | `String`\n`-O`, `--organization`| **Optional** | `Boolean`\n\n#### Examples\n\n* Fork a GitHub repository.\n\n    ```\ngh re --fork repo --user user\n    ```\n\n* Fork a GitHub repository into the node-gh organization.\n\n    ```\ngh re --fork repo --user user --organization node-gh\n    ```\n\n\n### 5. Delete\n\nOption                | Usage        | Type\n---                   | ---          | ---\n`-D`, `--delete`      | **Required** | `String`\n`-u`, `--user`        | **Required** | `String`\n\n#### Example\n\n* Delete a repository of the logged user.\n\n    ```\ngh re --delete foo\n    ```\n\n## Gists\n\n```\ngh gists\n```\n\n> **Alias:** `gh gi`\n\n### 1. Open in Browser\n\nOption                 | Usage        | Type\n---                    | ---          | ---\n`-B`, `--browser`      | **Required** | `Boolean`\n`-u`, `--user`         | *Optional*   | `String`\n`-i`, `--id`           | *Optional*   | `String`\n\n#### Examples\n\n* **Shortcut** for opening your Gists in the browser.\n\n    ```\ngh gi\n    ```\n\n* Open a Gist in the browser.\n\n    ```\ngh gi --browser --id 5991877\n    ```\n\n### 2. Create\n\nOption                | Usage        | Type\n---                   | ---          | ---\n`-N`, `--new`         | **Required** | `String`\n`-c`, `--content`     | *Optional*   | `String`\n`-d`, `--description` | *Optional*   | `String`\n`-p`, `--private`     | *Optional*   | `Boolean`\n`-P`, `--paste`       | *Optional*   | `Boolean`\n\n#### Examples\n\n* Create a Gist `foo.js` pasting the contents of your clipboard.\n\n    ```\ngh gi --new foo.js --paste\n    ```\n\n* Create a Gist `hello` containing \"Hello World\".\n\n    ```\ngh gi --new hello --content \"Hello World!\"\n    ```\n\n* Create a private Gist `hello` containing \"Hello World\".\n\n    ```\ngh gi --new hello --content \"Hello World!\" --private\n    ```\n\n\n### 3. Fork\n\nOption                | Usage        | Type\n---                   | ---          | ---\n`-f`, `--fork`        | **Required** | `String`\n\n#### Examples\n\n* Fork a Gist.\n\n    ```\ngh gi --fork 5444883\n    ```\n\n\n### 4. Delete\n\nOption                | Usage        | Type\n---                   | ---          | ---\n`-D`, `--delete`      | **Required** | `String`\n\n#### Example\n\n* Delete a Gist.\n\n    ```\ngh gi --delete 4252323\n    ```\n\n* Delete multiple Gists.\n\n    ```\ngh gi --delete 4252321 --delete 4252322\n    ```\n\n## User\n\n```\ngh user\n```\n\n> **Alias:** `gh us`\n\n### 1. Login/Logout\n\nOption            | Usage        | Type\n---               | ---          | ---\n`-l`, `--login`   | **Required** | `Boolean`\n`-L`, `--logout`  | **Required** | `Boolean`\n\n#### Examples\n\n* Login or show current logged in GitHub user.\n\n    ```\ngh user --login\n    ```\n\n* Logout current GitHub account.\n\n    ```\ngh user --logout\n    ```\n\n## Alias\n\n```\ngh alias\n```\n\n> **Alias:** `gh al`\n\n### 1. List\n\nOption            | Usage        | Type\n---               | ---          | ---\n`-l`, `--list`    | **Required** | `Boolean`\n\n#### Examples\n\n* **Shortcut** for listing aliases.\n\n    ```\ngh alias\n    ```\n\n* List aliases.\n\n    ```\ngh alias --list\n    ```\n\n### 2. Add\n\nOption            | Usage        | Type\n---               | ---          | ---\n`-a`, `--add`     | **Required** | `String`\n`-u`, `--user`    | **Required** | `String`\n\n#### Examples\n\n* Create alias for username.\n\n    ```\ngh alias --add zeno --user zenorocha\n    ```\n\n### 3. Remove\n\nOption            | Usage        | Type\n---               | ---          | ---\n`-r`, `--remove`  | **Required** | `String`\n\n#### Examples\n\n* Remove alias.\n\n    ```\ngh alias --remove zeno\n    ```\n\n## Config\n\nThere are some pretty useful configurations that you can set on [.gh.json](https://github.com/node-gh/gh/blob/master/.gh.json).\nThis file can be found under home directory *(on MacOSx: `/Users/yourName/.gh.json` on Windows: `C:\\\\Users\\yourName\\.gh.json`)*.\n\n* GitHub API configurations. Change it if you're a [GitHub Enterprise](https://enterprise.github.com/) user.\n\n    ```javascript\n\"api\": {\n    \"host\": \"api.github.com\",\n    \"protocol\": \"https\",\n    \"version\": \"3.0.0\"\n}\n    ```\n\n* Set default branch and remote.\n\n    ```javascript\n\"default_branch\": \"master\",\n\"default_remote\": \"origin\"\n    ```\n\n* GitHub data filled once you log in.\n\n    ```javascript\n\"github_token\": \"\",\n\"github_user\": \"\"\n    ```\n\n* Automate tasks to be runned before or after a certain command.\n\n    ```javascript\n\"hooks\": {\n        \"pull-request\": {\n            \"merge\": {\n                \"before\": [{\"cmd\": \"ls -la\", \"log\": true}],\n                \"after\": [\n                    \"gh pr {{options.number}} --comment 'Thank you, pull request merged :D'\"\n                ]\n            }\n        }\n}\n    ```\n\n* Run automated tasks passing arguments to the commands. Required for prompt commands.\n\n    ```javascript\n\"hooks\": {\n        \"pull-request\": {\n            \"merge\": {\n                \"before\": [{\"cmd\": \"foo\", \"args\": [\"bar\", \"qux\"]}]\n            }\n        }\n}\n    ```\n\n* Set default branch name prefix for PR fetching.\n\n    ```javascript\n\"pull_branch_name_prefix\": \"pr-\"\n    ```\n\n* Insert signature below issue comment.\n\n    ```javascript\n\"signature\": \"<br><br>:octocat: *Sent from [GH](http://nodegh.io).*\"\n    ```\n\n## Plugins\n\n* [GH Gif](https://github.com/node-gh/gh-gif) - A plugin for commenting on pull requests/issues using GIF reactions.\n* [GH Travis](https://github.com/node-gh/gh-travis) - A plugin for integrating Travis, a continous integration server.\n* [GH Jira](https://github.com/node-gh/gh-jira) - A plugin for integrating Jira, an issue management system.\n\nFeel free to create your own plugins by forking [GH Boilerplate](https://github.com/node-gh/gh-boilerplate).\n\n## Testing\n\nCheck [Travis](https://travis-ci.org/node-gh/gh) for continous integration results.\n\n* Run [JSHint](http://www.jshint.com/), a tool to detect errors and potential problems.\n\n    ```\nnpm run-script lint\n    ```\n\n* Run [Mocha](http://visionmedia.github.io/mocha/), a unit test framework.\n\n    ```\nnpm run-script test\n    ```\n\n## Team\n\nNode GH is maintained by these guys and some awesome [contributors](https://github.com/node-gh/gh/graphs/contributors).\n\n[![Eduardo Lundgren](http://gravatar.com/avatar/42327de520e674a6d1686845b30778d0?s=70)](https://github.com/eduardolundgren/) | [![Zeno Rocha](http://gravatar.com/avatar/e190023b66e2b8aa73a842b106920c93?s=70)](https://github.com/zenorocha/)\n--- | ---\n[Eduardo Lundgren](https://github.com/eduardolundgren/) | [Zeno Rocha](https://github.com/zenorocha/)\n\n## Contributing\n\nContribute new commands to this project by copying and editing the content of [Hello World](https://github.com/node-gh/gh/blob/master/lib/cmds/hello.js) example.\n\n## History\n\nCheck [Release](https://github.com/node-gh/gh/releases) list.\n\n## License\n\n[BSD License](https://github.com/node-gh/gh/blob/master/LICENSE.md)",
  "readmeFilename": "README.md",
  "_id": "gh@1.7.0",
  "_from": "gh@1.7.x"
}
